import chroma from "chroma-js";

const overlayList = [
  {
    name: "temperature_mean",
    pathName: "MEAN",
    scale: [
      "#0031FF",
      "#0061FF",
      "#0092FF",
      "#00C2FF",
      "#00F3FF",
      "#24FFDB",
      "#55FFAA",
      "#86FF79",
      "#B6FF49",
      "#E7FF18",
      "#FFF600",
      "#FFE500",
      "#FFD400",
      "#FFC300",
      "#FFB200",
      "#FF9D00",
      "#FF7E00",
      "#FF5E00",
      "#FF3F00",
      "#FF1F00",
    ],
    domain: chroma.limits([0, 40], "e", 10).map(Math.round),
    mode: "hsl",
    classes: 15,
    units: "°C", //needs to be a toggle, should be a switch statement
    height: "320px",
  },
  {
    name: "temperature_minimum",
    pathName: "MIN",
    scale: [
      "#0031FF",
      "#0061FF",
      "#0092FF",
      "#00C2FF",
      "#00F3FF",
      "#24FFDB",
      "#55FFAA",
      "#86FF79",
      "#B6FF49",
      "#E7FF18",
      "#E7FF18",
      "#FFE500",
      "#FFD400",
      "#FFC300",
      "#FFB200",
      "#FF9D00",
      "#FF7E00",
      "#FF5E00",
      "#FF3F00",
      "#FF1F00",
    ],
    domain: chroma.limits([0, 40], "e", 10).map(Math.round),
    mode: "hsl",
    classes: 15,
    units: "°C",
    height: "320px",
  },
  {
    name: "temperature_maximum",
    pathName: "MAX",
    scale: [
      "#0031FF",
      "#0061FF",
      "#0092FF",
      "#00C2FF",
      "#00F3FF",
      "#24FFDB",
      "#55FFAA",
      "#86FF79",
      "#B6FF49",
      "#E7FF18",
      "#E7FF18",
      "#FFE500",
      "#FFD400",
      "#FFC300",
      "#FFB200",
      "#FF9D00",
      "#FF7E00",
      "#FF5E00",
      "#FF3F00",
      "#FF1F00",
    ],
    domain: chroma.limits([0, 40], "e", 10).map(Math.round),
    mode: "hsl",
    classes: 15,
    units: "°C",
    height: "320px",
  },
  {
    name: "humidity",
    pathName: "RH",
    scale: [
      "#f03b20",
      "#fd8d3c",
      "#feb24c",
      "#fed976",
      "#ffffb2",
      "#c7e9b4",
      "#7fcdbb",
      "#41b6c4",
      "#1d91c0",
      "#225ea8",
    ],
    domain: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100],
    mode: "hsl",
    classes: 15,
    units: "%",
    height: "320px",
  },
  {
    name: "wind",
    pathName: "WS",
    scale: [
      "mediumpurple",
      "slateBlue",
      "mediumseagreen",
      "darkorange",
      "mediumvioletred",
    ],
    domain: [
      0.65, 2.5, 4.45, 6.75, 9.4, 12.35, 15.55, 19, 22.65, 26.5, 30.6, 42,
    ].map(Math.round),
    mode: "hsl",
    classes: 15,
    units: "m/s",
    height: "320px",
  },
  {
    name: "rainfall",
    pathName: "TP",
    scale: [
      chroma("#BAB8B8").alpha(0),
      "#BAB8B8",
      "#00C5FF",
      "#6BFB90",
      "#FFFF00",
      "#FFAA00",
      "#FF0000",
      "#FF73DF",
      "#8400A8",
    ],
    domain: [0, 5, 15, 37.5, 75, 150, 250, 400, 500],
    mode: "rgb",
    classes: 35,
    units: "mm/24h",
    height: "320px",
  },
  {
    name: "cloud",
    pathName: "TCC",
    scale: [
      "SteelBlue",
      "lightsteelblue",
      chroma("linen").darken(0.2),
      "whitesmoke",
    ],
    domain: chroma.limits([0, 100], "e", 10),
    mode: "lab",
    classes: 15,
    units: "%",
    height: "320px",
  },
];

// Function to get the correct color scale
export const getColorScale = (overlayName) => {
  const overlay = overlayList.find((o) => o.name === overlayName);
  if (!overlay) {
    console.error(`Overlay not found: ${overlayName}`);
    return chroma.scale(["#ffffff", "#000000"]).domain([0, 1]); // Fallback grayscale
  }
  return chroma.scale(overlay.scale).domain(overlay.domain).mode(overlay.mode);
};

// "#87CEFA",
//   "#7FFFD4",
//   "#90EE90",
//   "#00FF7F",
//   "#00DC00",
//   "#7CFC00",
//   "#E6DC32",
//   "#DAA520",
//   "#FF8C00",
//   "#FF4500",
//   "#FA3C3C",
//   "#F00082";

export default overlayList;
